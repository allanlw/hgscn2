* Overall Design

  This is still very much a work in progress.  Here be +dragons+
  serpents.

* Design Goals
  - Minimize single points of failure
  - Minimize dependence on third-party HTTP services
  - Remain as available as possible in the face of active DDoS
    adversaries

* Three Stage Design
** Stage 1
   This is the stage that is distributed out as a data URI that
   contains the minimal code needed to bootstrap the other stages.

   The stage 1 URI should be created through a generator that glues
   together the necessary components.  If possible, it should
   be 4k or smaller.

*** Magnet Link
    This magnet link is the pointer to the stage 3 website bundle.  It
    will vary across links.

    This should also contain the peers and/or trackers necessary to
    bootstrap the connection during stage 2.
*** Stage 2 Manifest
    This list contains a set of known locations of the generic stage 2
    bundles.  Because these are a potential vulnerability to the
    system, it should contain links to disparate, high-load capable
    hosts.

    This manifest also contains the cryptographic hash of the stage 2
    bundle to be used as part of the subresource integrity system
    during bootstrap.
*** Bootstrap Code
    The bootstrap code is the block of javascript code necessary to
    parse the manifest and setup the environment as necessary to load
    and pass control off to the stage 2 code.
** Stage 2
   This is the stage that contains the actual logic of hgscn2 as
   executed in the wild.  It sets up webtorrent, connects to a host or
   hosts for bootstrapping, downloads, shares, and parses the stage 3
   bundle.

   The stage 2 bundle should be generic so it can be shared between
   all users, thus minimizing the risk of an adversary attacking the
   servers that host it.
*** UI/UX
    The stage 2 bundle should draw enough information into the page
    for the end-user to visualize where in the process of downloading
    and sharing the stage 3 bundle is.  If interpretation of the stage
    3 tarball will take a noticeable amount of time, it should also
    expose that information.
*** Torrent
    The stage 2 bundle should instantiate webtorrent and connect to
    the peers and/or trackers listed.  If possible, it should use PEX
    as quickly as possible to reduce load on the trackers and
    bootstrapping peers.

    It should participate fully in the swarm; there should be no
    option to download only.
*** Parsing
    The stage 3 bundle will be in the form of a zip archive.  This
    archive needs to be parsed before it is rendered into the page to
    resolve the links into a navigable format.  Allan and I still need
    to argue about what that means.
